- model: language_support.Language
  pk: 1
  fields:
    name: Markdown
    tokenizer:
      {
        "defaultToken": "",
        "tokenPostfix": ".md",
        "control": {},
        "noncontrol": {},
        "escapes": {},
        "jsescapes": {},
        "empty": ["area", "base", "basefont", "br", "col", "frame", "hr", "img", "input", "isindex", "link", "meta", "param"],
        "tokenizer": {
          "root": [
            [{},
              ["white", "keyword", "keyword", "keyword"]
            ],
            [{}, "keyword"],
            [{}, "meta.separator"],
            [{}, "comment"],
            [{}, "keyword"],
            [{}, "string"],
            [{}, {
              "token": "string",
              "next": "@codeblock"
            }],
            [{}, {
              "token": "string",
              "next": "@codeblockgh",
              "nextEmbedded": "$1"
            }],
            [{}, {
              "token": "string",
              "next": "@codeblock"
            }], {
              "include": "@linecontent"
            }
          ],
          "codeblock": [
            [{}, {
              "token": "string",
              "next": "@pop"
            }],
            [{}, {
              "token": "string",
              "next": "@pop"
            }],
            [{}, "variable.source"]
          ],
          "codeblockgh": [
            [{}, {
              "token": "variable.source",
              "next": "@pop",
              "nextEmbedded": "@pop"
            }],
            [{}, "variable.source"]
          ],
          "linecontent": [
            [{}, "string.escape"],
            [{}, "escape"],
            [{}, "strong"],
            [{}, "strong"],
            [{}, "emphasis"],
            [{}, "emphasis"],
            [{}, "variable"],
            [{}, "string.target"],
            [{},
              ["string.link", "", "string.link"]
            ],
            [{}, "string.link"], {
              "include": "html"
            }
          ],
          "html": [
            [{}, "tag"],
            [{}, {
              "cases": {
                "@empty": {
                  "token": "tag",
                  "next": "@tag.$1"
                },
                "@default": {
                  "token": "tag",
                  "next": "@tag.$1"
                }
              }
            }],
            [{}, {
              "token": "tag"
            }],
            [{}, "comment", "@comment"]
          ],
          "comment": [
            [{}, "comment.content"],
            [{}, "comment", "@pop"],
            [{}, "comment.content.invalid"],
            [{}, "comment.content"]
          ],
          "tag": [
            [{}, "white"],
            [{},
              ["attribute.name.html", "delimiter.html", "string.html", {
                "token": "string.html",
                "switchTo": "@tag.$S2.$4"
              }, "string.html"]
            ],
            [{},
              ["attribute.name.html", "delimiter.html", "string.html", {
                "token": "string.html",
                "switchTo": "@tag.$S2.$4"
              }, "string.html"]
            ],
            [{},
              ["attribute.name.html", "delimiter.html", "string.html"]
            ],
            [{}, "attribute.name.html"],
            [{}, "tag", "@pop"],
            [{}, {
              "cases": {
                "$S2==style": {
                  "token": "tag",
                  "switchTo": "embeddedStyle",
                  "nextEmbedded": "text/css"
                },
                "$S2==script": {
                  "cases": {
                    "$S3": {
                      "token": "tag",
                      "switchTo": "embeddedScript",
                      "nextEmbedded": "$S3"
                    },
                    "@default": {
                      "token": "tag",
                      "switchTo": "embeddedScript",
                      "nextEmbedded": "text/javascript"
                    }
                  }
                },
                "@default": {
                  "token": "tag",
                  "next": "@pop"
                }
              }
            }]
          ],
          "embeddedStyle": [
            [{}, ""],
            [{}, {
              "token": "@rematch",
              "next": "@pop",
              "nextEmbedded": "@pop"
            }],
            [{}, ""]
          ],
          "embeddedScript": [
            [{}, ""],
            [{}, {
              "token": "@rematch",
              "next": "@pop",
              "nextEmbedded": "@pop"
            }],
            [{}, ""]
          ]
        }
      }

- model: language_support.Language
  pk: 2
  fields:
    name: Python
    tokenizer:
      {
        "defaultToken": "",
        "tokenPostfix": ".java",
        "keywords": ["abstract", "continue", "for", "new", "switch", "assert", "default", "goto", "package", "synchronized", "boolean", "do", "if", "private", "this", "break", "double", "implements", "protected", "throw", "byte", "else", "import", "public", "throws", "case", "enum", "instanceof", "return", "transient", "catch", "extends", "int", "short", "try", "char", "final", "interface", "static", "void", "class", "finally", "long", "strictfp", "volatile", "const", "float", "native", "super", "while", "true", "false"],
        "operators": ["=", ">", "<", "!", "~", "?", ":", "==", "<=", ">=", "!=", "&&", "||", "++", "--", "+", "-", "*", "/", "&", "|", "^", "%", "<<", ">>", ">>>", "+=", "-=", "*=", "/=", "&=", "|=", "^=", "%=", "<<=", ">>=", ">>>="],
        "symbols": {},
        "escapes": {},
        "digits": {},
        "octaldigits": {},
        "binarydigits": {},
        "hexdigits": {},
        "tokenizer": {
          "root": [
            [{}, {
              "cases": {
                "@keywords": {
                  "token": "keyword.$0"
                },
                "@default": "identifier"
              }
            }], {
              "include": "@whitespace"
            },
            [{}, "@brackets"],
            [{}, "@brackets"],
            [{}, {
              "cases": {
                "@operators": "delimiter",
                "@default": ""
              }
            }],
            [{}, "annotation"],
            [{}, "number.float"],
            [{}, "number.float"],
            [{}, "number.hex"],
            [{}, "number.octal"],
            [{}, "number.binary"],
            [{}, "number.float"],
            [{}, "number"],
            [{}, "delimiter"],
            [{}, "string.invalid"],
            [{}, "string", "@string"],
            [{}, "string"],
            [{},
              ["string", "string.escape", "string"]
            ],
            [{}, "string.invalid"]
          ],
          "whitespace": [
            [{}, ""],
            [{}, "comment.doc", "@javadoc"],
            [{}, "comment", "@comment"],
            [{}, "comment"]
          ],
          "comment": [
            [{}, "comment"],
            [{}, "comment", "@pop"],
            [{}, "comment"]
          ],
          "javadoc": [
            [{}, "comment.doc"],
            [{}, "comment.doc.invalid"],
            [{}, "comment.doc", "@pop"],
            [{}, "comment.doc"]
          ],
          "string": [
            [{}, "string"],
            [{}, "string.escape"],
            [{}, "string.escape.invalid"],
            [{}, "string", "@pop"]
          ]
        }
      }

- model: language_support.Language
  pk: 3
  fields:
    name: Docker
    tokenizer:
      {
        "tokenizer": {
          "root": [
            [{}, "comment"],
            [{}, "keyword"],
            [{}, "variable"],
            [{}, "label"],
            [{}, "string.invalid"],
            [{}, "string.invalid"],
            [{}, "string", "@string_double"],
            [{}, "string", "@string_single"],
            [{}, "number.float"],
            [{}, "number"],
            [{}, "delimiter"], {
              "include": "@whitespace"
            }
          ],
          "string_double": [
            [{}, "string"],
            [{}, "string.escape.invalid"],
            [{}, "string", "@pop"]
          ],
          "string_single": [
            [{}, "string"],
            [{}, "string.escape.invalid"],
            [{}, "string", "@pop"]
          ],
          "whitespace": [
            [{}, ""],
            [{}, ""]
          ]
        }
      }
